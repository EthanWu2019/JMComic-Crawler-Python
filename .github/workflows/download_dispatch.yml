name: 下载JM本子 (dispatch)

on:
  workflow_dispatch:
    inputs:
      JM_ALBUM_ID:
        type: string
        description: 本子id（多个id用-隔开，如 '123-456-789'）
        required: true

jobs:
  download:
    runs-on: ubuntu-latest
    env:
      # 工作流输入
      JM_ALBUM_ID: ${{ github.event.inputs.JM_ALBUM_ID }}

    steps:
      - uses: actions/checkout@v4
        
      - name: 检查文件是否已存在
        id: check_file
        run: |
          if [ -f "./resources/${JM_ALBUM_ID}.zip" ]; then
            echo "文件 ${JM_ALBUM_ID}.zip 已存在，跳过下载"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python 3.11
        if: steps.check_file.outputs.skip != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependency
        if: steps.check_file.outputs.skip != 'true'
        run: |
          pip install -r requirements-dev.txt

      - name: 安装jmcomic（pip）
        if: steps.check_file.outputs.skip != 'true'
        run: |
          pip install jmcomic -i https://pypi.org/project --upgrade

      - name: 运行下载脚本
        if: steps.check_file.outputs.skip != 'true'
        run: jmcomic p${{ env.JM_ALBUM_ID }} --option="./option.yml"

      - name: 下载依赖
        if: steps.check_file.outputs.skip != 'true'
        run: |
          sudo apt install ghostscript
          sudo apt-get install -y zip

      - name: 压缩 pdf
        if: steps.check_file.outputs.skip != 'true'
        run: |
          mkdir -p ./resources
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile="./result/pdf/${JM_ALBUM_ID}_compressed.pdf" "./result/pdf/${JM_ALBUM_ID}.pdf"
          cp "./result/pdf/${JM_ALBUM_ID}_compressed.pdf" "./resources/${JM_ALBUM_ID}.pdf"

      - name: 创建加密 ZIP 文件
        if: steps.check_file.outputs.skip != 'true'
        working-directory: ./resources
        run: |
          zip -P ${JM_ALBUM_ID} "${JM_ALBUM_ID}.zip" "${JM_ALBUM_ID}.pdf"
          rm "${JM_ALBUM_ID}.pdf"

      - name: 上传到 Github，这里要用 Github Actions Bot 的信息
        if: steps.check_file.outputs.skip != 'true'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add .
          git commit -m "update"
          git push

      - name: 开启 SSH 服务 (Start SSH service)
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 3